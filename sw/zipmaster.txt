################################################################################
##
## Filename: 	zipmaster.txt
##
## Project:	AutoFPGA, a utility for composing FPGA designs from peripherals
##
## Purpose:	To describe what needs to be done to make the ZipCPU a part
##		of a main .v file.  This Wishbone Master description
##	illustrates how some of how a wishbone bus master might be integrated
##	into the automatic FPGA designer.
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
##
## Copyright (C) 2017, Gisselquist Technology, LLC
##
## This program is free software (firmware): you can redistribute it and/or
## modify it under the terms of  the GNU General Public License as published
## by the Free Software Foundation, either version 3 of the License, or (at
## your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
##
## License:	GPL, v3, as defined and found on www.gnu.org,
##		http://www.gnu.org/licenses/gpl.html
##
##
################################################################################
##
##
@PREFIX=zip
@ACCESS=INCLUDE_ZIPCPU
@MTYPE=CPU
@SCOPE.TRIGGER=zip_trigger
@SCOPE.DATA=zip_debug
@INT.ZIP.WIRE=zip_cpu_int
@INT.ZIP.BUS=buspic
@MAIN.PARAM=
	//
	//
	// Variables/definitions needed by the ZipCPU BUS master
	//
	//
	// A 32-bit address indicating where teh ZipCPU should start running
	// from
	localparam	RESET_ADDRESS = 32'h01000000;
	//
	// The number of valid bits on the bus
	localparam	ZIP_ADDRESS_WIDTH = 30;	// Zip-CPU address width
	//
	// Number of ZipCPU interrupts
	localparam	ZIP_INTS = 16;
	//
	// ZIP_START_HALTED
	//
	// A boolean, indicating whether or not the ZipCPU be halted on startup?
	localparam	ZIP_START_HALTED=1'b1;
@MAIN.DEFNS=
	// ZipSystem/ZipCPU connection definitions
	// All we define here is a set of scope wires
	wire	[31:0]	zip_debug;
	wire		zip_trigger;
	wire		zip_dbg_ack, zip_dbg_stall;
	wire	[31:0]	zip_dbg_data;
	wire	[15:0] zip_int_vector;
@MAIN.INSERT=
	//
	//
	// The ZipCPU/ZipSystem BUS master
	//
	//
`ifndef	WBUBUS_MASTER
	wire	wbu_zip_sel;
	assign	wbu_zip_sel = 1'b0;
`endif
	wire	zip_reset;
	assign	zip_reset = 1'b0;
	assign	zip_int_vector = { alt_int_vector[14:8], sys_int_vector[14:6] };
	zipsystem #(RESET_ADDRESS,ZIP_ADDRESS_WIDTH,10,ZIP_START_HALTED,ZIP_INTS)
		swic(i_clk, zip_reset,
			// Zippys wishbone interface
			zip_cyc, zip_stb, zip_we, zip_addr, zip_data, zip_sel,
					zip_ack, zip_stall, dwb_idata, zip_err,
			zip_int_vector, zip_cpu_int,
			// Debug wishbone interface
			((wbu_cyc)&&(wbu_zip_sel)),
			((wbu_stb)&&(wbu_zip_sel)),wbu_we, wbu_addr[0],
			wbu_data, zip_dbg_ack, zip_dbg_stall, zip_dbg_data,
			zip_debug);
	assign	zip_trigger = zip_debug[0];
#
#
#
@PREFIX=syspic
@PIC.BUS= sys_int_vector
@PIC.MAX=15
@PREFIX=zip_dmac
@INT.DMAC.WIRE=
@INT.DMAC.PIC= syspic
@INT.DMAC.ID=0
@PREFIX=zip_jiffies
@INT.JIFFIES.WIRE=
@INT.JIFFIES.PIC= syspic
@INT.JIFFIES.ID=1
@PREFIX=zip_tmc
@INT.TMC.WIRE=
@INT.TMC.PIC= syspic
@INT.TMC.ID=2
@PREFIX=zip_tmb
@INT.TMB.WIRE=
@INT.TMB.PIC= syspic
@INT.TMB.ID=3
@PREFIX=TMA
@INT.TMA.WIRE=
@INT.TMA.PIC= syspic
@INT.TMA.ID=4
@PREFIX=alt
@INT.ALT.WIRE=
@INT.ALT.PIC= syspic
@INT.ALT.ID=5
#
@PREFIX=altpic
@PIC.BUS= alt_int_vector
@PIC.MAX=15
#
# @PIC.ASSIGNED= UIC UOC UPC UTC MIC MOC MPC MTC
#
@PREFIX=zip_alt_uic
@INT.UIC.WIRE=
@INT.UIC.PIC=altpic
@INT.UIC.ID=0
#
@PREFIX=zip_alt_uoc
@INT.UOC.WIRE=
@INT.UOC.PIC=altpic
@INT.UOC.ID=1
#
@PREFIX=zip_alt_upc
@INT.UPC.WIRE=
@INT.UPC.PIC=altpic
@INT.UPC.ID=2
#
@PREFIX=zip_alt_utc
@INT.UTC.WIRE=
@INT.UTC.PIC=altpic
@INT.UTC.ID=3
#
@PREFIX=zip_alt_mic
@INT.MIC.WIRE=
@INT.MIC.PIC=altpic
@INT.MIC.ID=4
#
@PREFIX=zip_alt_moc
@INT.MOC.WIRE=
@INT.MOC.PIC=altpic
@INT.MOC.ID=5
#
@PREFIX=zip_alt_mpc
@INT.MPC.WIRE=
@INT.MPC.PIC=altpic
@INT.MPC.ID=6
#
@PREFIX=zip_alt_mtc
@INT.MTC.WIRE=
@INT.MTC.PIC=altpic
@INT.MTC.ID=7
#
#
#
