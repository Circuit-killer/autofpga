Goals:
	Given a list of peripheral files (unknown before hand), read them and
	determine:
		1. If they have parameters that need to be configured, what
			those parameters are, and how they need to be configured
		2. If they have scope's, and if so, offer the user a selection
			for what he wants the scopes to reference
		3. If they have interrupts and what those interrupt names are
			(both internally, and as C extensions).  Then, offer
			the user the options of placing those interrupts.

		4. If they fit into one of the following classes of items:
			A. Full bus masters
			B. (Partial) bus masters, wanting access to one periph
			C. One-clock Peripherals (interrupt controller, etc.)
			D. Two-clock Peripherals (RTC clock, block RAM, scopes,
				etc.)
			E. Memory Peripherals
				These need a line within the linker script
				These need to define if their memory region,
					within that linker script, has read,
					write, or execute permissions
			F. Generic Peripherals (flash, SDRAM, MDIO, etc.)
		5. Peripheral files may describe more than one peripheral.
			For example, the GPS file has a GPS-Clock, GPS-TB
			to measure the performance of the GPS clock, and a
			WBUART to allow us to read from the GPS and to write
			to it and so configure it.
			Of course ... this also includes a parameter that must
			be set (baud rate)

	Each peripheral may have 3-levels of container descriptions: top,
	main, and sub.  Sub is only appropriate if the peripheral might be
	placed into a sub-container, such as a single_io_slave container,
	or even (should I build one) a double-io-slave container.
