################################################################################
##
## Filename: 	clkcounter.txt
##
## Project:	AutoGen, a utility for composing FPGA designs from peripherals
##
## Purpose:	To describe the clkcounter's interface for autofpga to work
##		with.
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
##
## Copyright (C) 2017, Gisselquist Technology, LLC
##
## This program is free software (firmware): you can redistribute it and/or
## modify it under the terms of  the GNU General Public License as published
## by the Free Software Foundation, either version 3 of the License, or (at
## your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
##
## License:	GPL, v3, as defined and found on www.gnu.org,
##		http://www.gnu.org/licenses/gpl.html
##
##
################################################################################
##
##
@PREFIX=clkhdmiin
@NADDR=	1
@PTYPE=	SINGLE
@SINGLE.INPUTS=	ck_pps i_hdmi_in_clk
@MAIN.DEFNS=
	reg	r_clkhdmiin_ack;
@MAIN.INSERT=
	clkcounter clkhmdiin(i_clk, ck_pps, i_hdmi_in_clk, clkhdmiin_data);
	always @(posedge i_clk)
		r_clkhdmiin_ack <= (wb_stb)&&(clkhdmiin_sel);
	assign	clkhdmiin_ack   = r_clkhdmiin_ack;
	assign	clkhdmiin_stall = 1'b0;
@REGS.NOTE = // HDMI-IN Clock Counter (measures clock speed)
@REGS.N = 1
@REGS.0 = 0 R_HDMI_INCLK	 HCLKIN
@BDEF.IONAME= io_clkhdmiin
@BDEF.IOTYPE= unsigned
#
#
@PREFIX=clkhdmiout
@NADDR=	1
@PTYPE=	SINGLE
@SINGLE.INPUTS=	ck_pps i_hdmi_out_clk
@MAIN.DEFNS=
	reg	r_clkhdmiout_ack;
@MAIN.INSERT=
	clkcounter clkhmdiout(i_clk, ck_pps, i_hdmi_out_clk, clkhdmiout_data);
	always @(posedge i_clk)
		r_clkhdmiout_ack <= (wb_stb)&&(clkhdmiout_sel);
	assign	clkhdmiout_ack   = r_clkhdmiout_ack;
	assign	clkhdmiout_stall = 1'b0;
@REGS.NOTE = // HDMI-OUT Clock Counter (measures clock speed)
@REGS.N = 1
@REGS.0 = 0 R_HDMI_OUTCLK	 HCLKOUT
@BDEF.IONAME= io_clkhdmiout
@BDEF.IOTYPE= unsigned
#
#
#
#
@PREFIX=sysclk
@NADDR=	1
@PTYPE=	SINGLE
@SINGLE.INPUTS=	ck_pps
@MAIN.DEFNS=
	reg	r_sysclk_ack;
@MAIN.INSERT=
	clkcounter sysclkctr(i_clk, ck_pps, i_clk, sysclk_data);
	always @(posedge i_clk)
		r_sysclk_ack <= (wb_stb)&&(sysclk_sel);
	assign	sysclk_ack   = r_sysclk_ack;
	assign	sysclk_stall = 1'b0;
@REGS.NOTE = // SYSCLK Clock Counter (measures clock speed)
@REGS.N = 1
@REGS.0 = 0 R_SYSCLK SYSCLK
@BDEF.IONAME= io_sysclk
@BDEF.IOTYPE= unsigned
